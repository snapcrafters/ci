name: Run tests
description: Install a snap and run specified tests for it.
author: Snapcrafters
branding:
  icon: check
  color: orange

inputs:
  channel:
    description: "The channel to install the snap from"
    default: "latest/candidate"
    required: false
  github-token:
    description: "A token with permissions to comment on issues"
    required: true
  snapcraft-project-root:
    description: "The root of the snapcraft project, where the `snapcraft` command would usually be executed from."
    required: false
  issue-number:
    description: "Number of the issue comment on."
    required: true
  test-command:
    description: "The command to run the tests."
    required: true

runs:
  using: composite
  steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Fetch build manifests
      uses: snapcrafters/ci/fetch-manifests@main
      with:
        token: ${{ inputs.github-token }}

    - name: Find and parse snapcraft.yaml
      id: snapcraft-yaml
      uses: snapcrafters/ci/parse-snapcraft-yaml@main
      with:
        snapcraft-project-root: ${{ inputs.snapcraft-project-root }}

    - name: Install snap
      shell: bash
      env:
        snap_name: ${{ steps.snapcraft-yaml.outputs.snap-name }}
      run: |
        # If we got a manifest file then parse the revision from it
        if ls manifest-amd64.yaml &>/dev/null; then
          rev="$(yq -r '.revision' manifest-amd64.yaml)"
          echo "Installing snap revision '${rev}' from build manifest"
          sudo snap install "${snap_name}" --revision "${rev}"
        else
          echo "Installing snap from '${{ inputs.channel }}'"
          sudo snap install "${snap_name}" --channel "${{ inputs.channel }}"
        fi

    - name: Run tests
      id: tests
      shell: bash
      run: |
        # shellcheck disable=SC2288,SC2086,SC1083
        ${{ inputs.test-command }} |& tee test-output.txt
        echo 'output=<<__TEST_EOF__' >> $GITHUB_OUTPUT
        cat test-output.txt >> $GITHUB_OUTPUT
        echo '__TEST_EOF__' >> $GITHUB_OUTPUT

    - name: Comment on call for testing issue with test result
      if: success() || failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: ${{ inputs.issue-number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Automated testing ${{ steps.tests.conclusion }}.

            ${{ steps.tests.summary }}

            <details><summary>Test command output</summary>
            ```
            ${{ steps.tests.outputs.output }}
            ```
            </details>
            Full logs are available at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            `
          })
