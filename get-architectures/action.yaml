name: Get Architectures
description: Get the architectures supported by a given snap
author: Snapcrafters
branding:
  icon: code
  color: orange

inputs:
  snapcraft-project-root:
    description: "The root of the snapcraft project, where the `snapcraft` command would usually be executed from."
    required: false

outputs:
  architectures:
    description: "A space-separated list of architectures supported by the snap"
    value: ${{ steps.architectures.outputs.architectures }}
  architectures-list:
    description: "A JSON list of architectures supported by the snap"
    value: ${{ steps.architectures.outputs.architectures_list }}

runs:
  using: composite
  steps:
    - name: Checkout the source
      uses: actions/checkout@v4

    - name: Find and parse snapcraft.yaml
      id: snapcraft-yaml
      uses: snapcrafters/ci/parse-snapcraft-yaml@main
      with:
        snapcraft-project-root: ${{ inputs.snapcraft-project-root }}

    - name: Compute architectures
      id: architectures
      shell: bash
      env:
        yaml_path: ${{ steps.snapcraft-yaml.outputs.yaml-path }}
      run: |
        # core24 uses a different syntax for specifying platforms.
        if [[ "$(yq -r '.base' "$yaml_path")" == "core24" ]]; then
          architectures_list="$(yq -r -I=0 -o=json '[.platforms | to_entries | .[] | .key]' "$yaml_path")"
          architectures="$(yq -r -I=0 -o=csv '[.platforms | to_entries | .[] | .key]' "$yaml_path" | tr ',' ' ')"
        else
          # Get the list as a json array. E.g. ["amd64", "arm64"]
          architectures_list="$(yq -r -I=0 -o=json '[.architectures[]]' "$yaml_path")"
          
          # Get the list as a space-separated string. E.g. "amd64" "arm64"
          architectures="$(yq -r -I=0 -o=csv '[.architectures[]]' "$yaml_path" | tr ',' ' ')"
          
          # Handle the case where architectures is a list of objects
          if echo "$architectures" | grep -q "build-on"; then
            architectures_list="$(yq -r -I=0 -o=json '[.architectures[]."build-on"]' "$yaml_path")"
            architectures="$(yq -r -I=0 -o=csv '[.architectures[]."build-on"]' "$yaml_path" | tr ',' ' ')"
          fi
        fi

        echo "architectures_list=$architectures_list" >> "$GITHUB_OUTPUT"
        echo "architectures=$architectures" >> "$GITHUB_OUTPUT"
