name: Sync Version
description: Sync versions of a snap's applications and parts with the latest upstream versions.
author: Snapcrafters
branding:
  icon: refresh-cw
  color: orange

inputs:
  bot-email:
    description: "The email address of the bot account used to commit screenshots."
    required: false
    default: "snapforge.team@gmail.com"
  bot-name:
    description: "The name of the bot account used to commit screenshots."
    required: false
    default: "Snapcrafters Bot"
  branch:
    description: "The branch on which modifications to snapcraft.yaml should be made."
    default: "candidate"
    required: false
  snapcraft-project-root:
    description: "The root of the snapcraft project, where the `snapcraft` command would usually be executed from."
    required: false
  token:
    required: true
    description: A token with write privileges to the repository.
  update-script:
    description: "Bash script that fetches the latest version and updates the source tree as required."
    required: true

runs:
  using: composite
  steps:
    - name: Checkout the source
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.token }}
        ref: ${{ inputs.branch }}

    - name: Find and parse snapcraft.yaml
      id: snapcraft-yaml
      uses: snapcrafters/ci/parse-snapcraft-yaml@main
      with:
        snapcraft-project-root: ${{ inputs.snapcraft-project-root }}

    - name: Run update script
      shell: bash
      run: |
        # shellcheck disable=SC2288,SC2086,SC1083
        ${{ inputs.update-script }}

    - name: Check for modified files
      shell: bash
      id: git-check
      run: |
        MODIFIED=$([ -z "$(git status --porcelain)" ] && echo "false" || echo "true")
        echo "modified=$MODIFIED" >> "$GITHUB_OUTPUT"

    - name: Commit changes
      if: steps.git-check.outputs.modified == 'true'
      shell: bash
      env:
        snap_name: ${{ steps.snapcraft-yaml.outputs.snap-name }}
        old_version: ${{ steps.snapcraft-yaml.outputs.version }}
        yaml_path: ${{ steps.snapcraft-yaml.outputs.yaml-path }}
      run: |
        new_version="$(yq -r '.version' "$yaml_path")"
        if [[ ! "$old_version" == "$new_version" ]]; then
            version=$new_version
        fi
        git config --global user.name "${{ inputs.bot-name }}"
        git config --global user.email "${{ inputs.bot-email }}"
        if [[ -n "${version:-}" ]]; then
            git commit -am "chore: bump ${snap_name} to version ${version}"
        else
            git commit -am "chore: bump ${snap_name} dependencies"
        fi
        git push
